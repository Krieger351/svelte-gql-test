module.exports = {
  env: {
    browser: true,
    es2017: true,
    node: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:svelte/recommended",
    "plugin:svelte/prettier",
    "plugin:eslint-comments/recommended",
    "plugin:sonarjs/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
  ],
  ignorePatterns: ["!.*"],
  overrides: [
    {
      env: { node: true },
      files: "*.cjs",
    },
    {
      files: ["*.config.ts", "*.config.mjs", "*.config.cjs", "codegen.ts"],
      rules: {
        "import/no-default-export": "off",
      },
    },
    {
      extends: [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
      ],
      files: ["*.ts", "*.svelte"],
      rules: {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record",
        ],
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/consistent-type-imports": [
          "error",
          { fixStyle: "inline-type-imports", prefer: "type-imports" },
        ],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          { argsIgnorePattern: "^_" },
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            classes: true,
            enums: true,
            functions: true,
            ignoreTypeReferences: false,
            typedefs: true,
            variables: true,
          },
        ],
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
      },
    },
    {
      extends: ["plugin:playwright/recommended"],
      files: ["*.spec.ts"],
      rules: {
        "playwright/prefer-lowercase-title": "error",
        "playwright/prefer-strict-equal": "error",
        "sonarjs/no-duplicate-string": "off",
      },
    },
    {
      extends: ["plugin:vitest/recommended", "plugin:testing-library/dom"],
      files: ["*.person.test.ts"],
      rules: {
        "sonarjs/no-duplicate-string": "off",
      },
    },
    {
      files: ["*.svelte"],
      parser: "svelte-eslint-parser",
      parserOptions: {
        parser: "@typescript-eslint/parser",
      },
      rules: {
        "svelte/block-lang": [
          "error",
          {
            script: ["ts"],
            style: undefined,
          },
        ],
        "svelte/button-has-type": "error",
        "svelte/derived-has-same-inputs-outputs": "error",
        "svelte/max-attributes-per-line": "off",
        "svelte/no-dom-manipulating": "error",
        "svelte/no-dupe-on-directives": "error",
        "svelte/no-extra-reactive-curlies": "error",
        "svelte/no-immutable-reactive-statements": "error",
        "svelte/no-reactive-functions": "error",
        "svelte/no-reactive-literals": "error",
        "svelte/no-reactive-reassign": "error",
        "svelte/no-store-async": "error",
        "svelte/no-target-blank": "error",
        "svelte/no-trailing-spaces": "off",
        "svelte/no-unused-class-name": "error",
        "svelte/no-useless-mustaches": "error",
        "svelte/prefer-class-directive": "error",
        "svelte/prefer-destructured-store-props": "error",
        "svelte/prefer-style-directive": "error",
        "svelte/require-each-key": "error",
        "svelte/require-event-dispatcher-types": "error",
        "svelte/require-optimized-style-attribute": "error",
        "svelte/require-store-callbacks-use-set-param": "error",
        "svelte/require-store-reactive-access": "error",
        "svelte/require-stores-init": "error",
        "svelte/sort-attributes": "error",
        "svelte/spaced-html-comment": "error",
        "svelte/valid-each-key": "error",
      },
    },
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    extraFileExtensions: [".svelte"],
    project: ["tsconfig.json", "tsconfig.node.json"],
  },
  plugins: [
    "@typescript-eslint",
    "sort-destructure-keys",
    "prefer-arrow-functions",
  ],
  root: true,
  rules: {
    "eslint-comments/require-description": "error",
    "import/newline-after-import": "error",
    "import/no-default-export": "error",
    "import/no-duplicates": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/order": [
      "error",
      {
        alphabetize: {
          caseInsensitive: false,
          order: "asc",
        },
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type",
        ],
        "newlines-between": "never",
      },
    ],
    "padding-line-between-statements": [
      "error",
      { blankLine: "always", next: "export", prev: "*" },
      { blankLine: "never", next: "export", prev: "export" },
    ],
    "prefer-arrow-functions/prefer-arrow-functions": "error",
    "sort-destructure-keys/sort-destructure-keys": "error",
    "sort-keys": "error",
    "unicorn/no-keyword-prefix": "error",
    "unicorn/no-unused-properties": "error",
    "unicorn/template-indent": "off",
  },
  settings: {
    "import/resolver": {
      typescript: true,
    },
  },
};
